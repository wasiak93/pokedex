{"version":3,"sources":["LoadingIndicator.js","App.js","index.js"],"names":["LoadingIndicator","usePromiseTracker","promiseInProgress","className","type","color","App","useState","cardsArray","setCardsArray","cardsArrayFilter","setCardsArrayFilter","number","setNumber","url","setUrl","isLoading","setIsLoading","inputValue","setInputValue","error","setError","fetchData","useCallback","trackPromise","fetch","then","response","ok","Error","json","cards","catch","console","useEffect","map","id","name","imageUrl","supertype","subtype","rarity","key","src","alt","cardsFilter","value","onChange","e","target","newCards","filter","toLowerCase","includes","placeholder","onClick","newNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b0bda5b.chunk.js","sourcesContent":["import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\nimport \"./LoadingIndicator.css\";\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress && (\n      <div className=\"loader\">\n        <Loader type=\"ThreeDots\" color=\"orange\" />\n      </div>\n    )\n  );\n};\n\nexport default LoadingIndicator;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nconst numberFetchingCards = 8;\n\nconst App = () => {\n  const [cardsArray, setCardsArray] = useState([]);\n  const [cardsArrayFilter, setCardsArrayFilter] = useState([]);\n  const [number, setNumber] = useState(numberFetchingCards);\n  const [url, setUrl] = useState(\n    `https://api.pokemontcg.io/v1/cards?pageSize=${number}`\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(() => {\n    setIsLoading(true);\n    trackPromise(\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            setError(true);\n            throw Error(\"Something gone wrong\");\n          }\n          return response.json();\n        })\n        .then(({ cards }) => {\n          setError(false);\n          setCardsArray([...cards]);\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n          setIsLoading(false);\n        })\n    );\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handlerButton = () => {\n    const newNumber = number + numberFetchingCards;\n    setNumber(newNumber);\n    setUrl(`https://api.pokemontcg.io/v1/cards?pageSize=${newNumber}`);\n  };\n\n  const handlerInput = (e) => {\n    const value = e.target.value;\n    let newCards = cardsArray.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n    setCardsArrayFilter(newCards);\n    setInputValue(value);\n  };\n\n  const cards = cardsArray.map(\n    ({ id, name, imageUrl, supertype, subtype, rarity, number }) => (\n      <div key={id} className=\"card\">\n        <p className=\"card__title\">\n          <span className=\"card__name\">{name}</span>\n          Nr: {number}\n        </p>\n        <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Superttype: </span>\n          {supertype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Subtype: </span> {subtype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Rarity: </span> {rarity}\n        </p>\n      </div>\n    )\n  );\n  const cardsFilter = cardsArrayFilter.map(\n    ({ id, name, imageUrl, supertype, subtype, rarity, number }) => (\n      <div key={id} className=\"card\">\n        <p className=\"card__title\">\n          <span className=\"card__name\">{name}</span>\n          Nr: {number}\n        </p>\n        <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Superttype: </span>\n          {supertype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Subtype: </span> {subtype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Rarity: </span> {rarity}\n        </p>\n      </div>\n    )\n  );\n  return (\n    <div className=\"catalog\">\n      <div className=\"catalog__header header\">\n        <h1 className=\"header__title\">\n          Pokemon <span className=\"header__title--brown\">catalog</span>\n        </h1>\n        <div className=\"header__container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            className=\"header__input\"\n            onChange={handlerInput}\n            placeholder=\"Search\"\n          />\n          <div\n            className={\n              inputValue ? \"header__line header__line--red\" : \"header__line\"\n            }\n          ></div>\n          <div className=\"header__input-subtitle\">{inputValue && \"Search\"}</div>\n        </div>\n      </div>\n      {error && <p className=\"error\">Ooooops, something gone wrong</p>}{\" \"}\n      <div className=\"catalog__cards\">{inputValue ? cardsFilter : cards}</div>\n      <LoadingIndicator />\n      {!inputValue && !isLoading && !error ? (\n        <button className=\"catalog__button\" onClick={handlerButton}>\n          Load {numberFetchingCards} more cards\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}