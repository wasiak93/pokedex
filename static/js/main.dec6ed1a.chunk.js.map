{"version":3,"sources":["LoadingIndicator.js","components/Button.js","components/Card/Card.js","App.js","index.js"],"names":["LoadingIndicator","usePromiseTracker","promiseInProgress","className","type","color","Button","text","nameClass","onClick","name","actualType","Card","id","imageUrl","subtype","supertype","rarity","number","types","key","src","alt","App","useState","allCards","setAllCards","allCardsOneType","setAllCardsOneType","showingCard","setShowingCard","typesName","setTypesName","setNumber","url","setUrl","isLoading","setIsLoading","inputValue","setInputValue","error","setError","setActualType","fetchData","useCallback","trackPromise","fetch","then","response","ok","Error","json","cardsWithTypes","cards","filter","typesArray","map","uniqTypesArray","Set","catch","console","useEffect","handlerButtonTypes","card","newCards","toLowerCase","includes","handlerCardClick","log","typeButtons","value","onChange","e","target","placeholder","newNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dec6ed1a.chunk.js","sourcesContent":["import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\nimport \"./LoadingIndicator.css\";\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress && (\n      <div className=\"loader\">\n        <Loader type=\"ThreeDots\" color=\"orange\" />\n      </div>\n    )\n  );\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ text, nameClass, onClick, name, actualType }) => {\n  return (\n    <button\n      className={\n        nameClass\n          ? actualType === name\n            ? `catalog__button ${nameClass} catalog__button--active`\n            : `catalog__button ${nameClass}`\n          : \"catalog__button\"\n      }\n      onClick={name ? () => onClick(name) : onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({\n  id,\n  name,\n  imageUrl,\n  supertype,\n  subtype,\n  rarity,\n  number,\n  onClick,\n  types,\n}) => {\n  return (\n    <div key={id} className=\"card\" onClick={() => onClick(id)}>\n      <p className=\"card__title\">\n        <span className=\"card__name\">{name}</span>\n        Nr: {number}\n      </p>\n      <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Type: </span>\n        {types[0]}\n      </p>\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Subtype: </span> {subtype}\n      </p>\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Rarity: </span> {rarity}\n      </p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport Button from \"./components/Button\";\nimport Card from \"./components/Card/Card\";\n\nconst numberFetchingCards = 500;\n\nconst App = () => {\n  const [allCards, setAllCards] = useState([]);\n  const [allCardsOneType, setAllCardsOneType] = useState([]);\n  const [showingCard, setShowingCard] = useState([]);\n  const [typesName, setTypesName] = useState([]);\n\n  const [number, setNumber] = useState(numberFetchingCards);\n  const [url, setUrl] = useState(\n    `https://api.pokemontcg.io/v1/cards?pageSize=${number}`\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [actualType, setActualType] = useState(\"All\");\n\n  const fetchData = useCallback(() => {\n    setIsLoading(true);\n    trackPromise(\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            setError(true);\n            throw Error(\"Something gone wrong\");\n          }\n          return response.json();\n        })\n        .then(({ cards }) => {\n          const cardsWithTypes = cards.filter(({ types }) => types);\n          const typesArray = cardsWithTypes.map(({ types }) => types[0]);\n          const uniqTypesArray = [...new Set(typesArray)];\n\n          setError(false);\n          setAllCards([...cardsWithTypes]);\n          setAllCardsOneType([...cardsWithTypes]);\n          setShowingCard([...cardsWithTypes]);\n          setIsLoading(false);\n          setTypesName(uniqTypesArray);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n          setIsLoading(false);\n        })\n    );\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handlerButton = () => {\n    const newNumber = number + numberFetchingCards;\n    setNumber(newNumber);\n    setUrl(`https://api.pokemontcg.io/v1/cards?pageSize=${newNumber}`);\n  };\n\n  const handlerInput = (e) => {\n    const value = e.target.value;\n    let newCards = allCardsOneType.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n    setShowingCard([...newCards]);\n    setInputValue(value);\n  };\n\n  const handlerButtonTypes = (name) => {\n    setActualType(name);\n\n    const cards = allCards.filter((card) => card.types[0] === name);\n    switch (name) {\n      case \"All\":\n        setAllCardsOneType(allCards);\n        if (inputValue) {\n          let newCards = allCards.filter((card) =>\n            card.name.toLowerCase().includes(inputValue.toLowerCase())\n          );\n          setShowingCard([...newCards]);\n        }\n        break;\n      default:\n        setAllCardsOneType(cards);\n        if (inputValue) {\n          let newCards = cards.filter((card) =>\n            card.name.toLowerCase().includes(inputValue.toLowerCase())\n          );\n          setShowingCard([...newCards]);\n        }\n    }\n  };\n\n  const handlerCardClick = (id) => {\n    console.log(id);\n  };\n  const showArray = inputValue ? showingCard : allCardsOneType;\n  const cards = showArray.map((card) => (\n    <Card key={card.id} onClick={handlerCardClick} {...card} />\n  ));\n\n  const typeButtons = typesName.map((type, id) => (\n    <Button\n      key={id}\n      nameClass=\"catalog__button--smaller\"\n      text={type}\n      onClick={handlerButtonTypes}\n      name={type}\n      actualType={actualType}\n      id={id}\n    />\n  ));\n  return (\n    <div className=\"catalog\">\n      <div className=\"catalog__header header\">\n        <h1 className=\"header__title\">\n          Pokemon <span className=\"header__title--brown\">catalog</span>\n        </h1>\n        <div className=\"header__container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            className=\"header__input\"\n            onChange={handlerInput}\n            placeholder=\"Search\"\n          />\n          <div\n            className={\n              inputValue ? \"header__line header__line--color\" : \"header__line\"\n            }\n          ></div>\n          <div className=\"header__input-subtitle\">{inputValue && \"Search\"}</div>\n        </div>\n      </div>\n      {!isLoading && !error ? (\n        <div className=\"catalog__buttons-wrapper\">\n          <Button\n            nameClass=\"catalog__button--smaller\"\n            text=\"All\"\n            name=\"All\"\n            onClick={handlerButtonTypes}\n            actualType={actualType}\n          />\n          {typeButtons}\n        </div>\n      ) : null}\n      <div className=\"catalog__cards\">{cards}</div>\n      <LoadingIndicator />\n      {!inputValue && !isLoading && !error ? (\n        <Button\n          onClick={handlerButton}\n          text={`Load ${numberFetchingCards} more cards`}\n        />\n      ) : null}\n      {error && <p className=\"error\">Ooooops, something gone wrong</p>}{\" \"}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}