{"version":3,"sources":["LoadingIndicator.js","components/Button.js","components/Card/Card.js","App.js","index.js"],"names":["LoadingIndicator","usePromiseTracker","promiseInProgress","className","type","color","Button","text","nameClass","onClick","Card","id","name","imageUrl","supertype","subtype","rarity","number","key","src","alt","App","useState","cardsArray","setCardsArray","cardsArrayFilter","setCardsArrayFilter","setNumber","url","setUrl","isLoading","setIsLoading","inputValue","setInputValue","error","setError","fetchData","useCallback","trackPromise","fetch","then","response","ok","Error","json","cards","catch","console","useEffect","cardsToMap","map","card","typesArray","filter","types","typeButtons","Set","value","onChange","e","target","newCards","toLowerCase","includes","placeholder","newNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.051a9256.chunk.js","sourcesContent":["import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\nimport \"./LoadingIndicator.css\";\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress && (\n      <div className=\"loader\">\n        <Loader type=\"ThreeDots\" color=\"orange\" />\n      </div>\n    )\n  );\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ text, nameClass, onClick }) => {\n  return (\n    <button\n      className={nameClass ? `catalog__button ${nameClass}` : \"catalog__button\"}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ id, name, imageUrl, supertype, subtype, rarity, number }) => {\n  return (\n    <div key={id} className=\"card\">\n      <p className=\"card__title\">\n        <span className=\"card__name\">{name}</span>\n        Nr: {number}\n      </p>\n      <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Superttype: </span>\n        {supertype}\n      </p>\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Subtype: </span> {subtype}\n      </p>\n      <p className=\"card__type-name\">\n        <span className=\"card__type\">Rarity: </span> {rarity}\n      </p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport Button from \"./components/Button\";\nimport Card from \"./components/Card/Card\";\n\nconst numberFetchingCards = 500;\n\nconst App = () => {\n  const [cardsArray, setCardsArray] = useState([]);\n  const [cardsArrayFilter, setCardsArrayFilter] = useState([]);\n  const [number, setNumber] = useState(numberFetchingCards);\n  const [url, setUrl] = useState(\n    `https://api.pokemontcg.io/v1/cards?pageSize=${number}`\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [actualType, setActualType] = useState(\"All\");\n\n  const fetchData = useCallback(() => {\n    setIsLoading(true);\n    trackPromise(\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            setError(true);\n            throw Error(\"Something gone wrong\");\n          }\n          return response.json();\n        })\n        .then(({ cards }) => {\n          setError(false);\n          setCardsArray([...cards]);\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n          setIsLoading(false);\n        })\n    );\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handlerButton = () => {\n    const newNumber = number + numberFetchingCards;\n    setNumber(newNumber);\n    setUrl(`https://api.pokemontcg.io/v1/cards?pageSize=${newNumber}`);\n  };\n\n  const handlerInput = (e) => {\n    const value = e.target.value;\n    let newCards = cardsArray.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n    setCardsArrayFilter(newCards);\n    setInputValue(value);\n  };\n\n  const cardsToMap = inputValue ? cardsArrayFilter : cardsArray;\n  const cards = cardsToMap.map((card) => <Card key={card.id} {...card} />);\n\n  const cardsWithTypes = cardsToMap.filter(({ types }) => types);\n  const typesArray = cardsWithTypes.map(({ types }) => types[0]);\n  const uniqTypes = [...new Set(typesArray)];\n  const typeButtons = uniqTypes.map((type, id) => (\n    <Button key={id} nameClass=\"catalog__button--smaller\" text={type} />\n  ));\n  // console.log(types);\n  // [\"Grass\", \"Fighting\", \"Fairy\", \"Metal\", \"Lightning\", \"Water\", \"Psychic\", \"Darkness\", \"Fire\", \"Colorless\", \"Dragon\"]\n  return (\n    <div className=\"catalog\">\n      <div className=\"catalog__header header\">\n        <h1 className=\"header__title\">\n          Pokemon <span className=\"header__title--brown\">catalog</span>\n        </h1>\n        <div className=\"header__container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            className=\"header__input\"\n            onChange={handlerInput}\n            placeholder=\"Search\"\n          />\n          <div\n            className={\n              inputValue ? \"header__line header__line--color\" : \"header__line\"\n            }\n          ></div>\n          <div className=\"header__input-subtitle\">{inputValue && \"Search\"}</div>\n        </div>\n      </div>\n      {!isLoading && !error ? (\n        <div className=\"catalog__buttons-wrapper\">\n          <Button nameClass=\"catalog__button--smaller\" text=\"All\" />\n          {typeButtons}\n        </div>\n      ) : null}\n      {error && <p className=\"error\">Ooooops, something gone wrong</p>}{\" \"}\n      <div className=\"catalog__cards\">{cards}</div>\n      <LoadingIndicator />\n      {!inputValue && !isLoading && !error ? (\n        <Button\n          onClick={handlerButton}\n          text={`Load ${numberFetchingCards} more cards`}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}