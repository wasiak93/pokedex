{"version":3,"sources":["App.js","index.js"],"names":["App","useState","cardsArray","setCardsArray","cardsArrayFilter","setCardsArrayFilter","number","setNumber","url","setUrl","isLoading","setIsLoading","inputValue","setInputValue","fetchData","useCallback","fetch","then","response","ok","Error","json","cards","catch","error","console","useEffect","map","id","name","imageUrl","supertype","subtype","rarity","key","className","src","alt","cardsFilter","type","value","onChange","e","target","newCards","filter","toLowerCase","includes","placeholder","onClick","newNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.494a7854.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\n\nconst numberFetchingCards = 8;\n\nconst App = () => {\n  const [cardsArray, setCardsArray] = useState([]);\n  const [cardsArrayFilter, setCardsArrayFilter] = useState([]);\n  const [number, setNumber] = useState(numberFetchingCards);\n  const [url, setUrl] = useState(\n    `https://api.pokemontcg.io/v1/cards?pageSize=${number}`\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const fetchData = useCallback(() => {\n    setIsLoading(true);\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(\"Something gone wrong\");\n        }\n        return response.json();\n      })\n      .then(({ cards }) => {\n        setCardsArray([...cards]);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setIsLoading(false);\n      });\n  }, [url]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handlerButton = () => {\n    const newNumber = number + numberFetchingCards;\n    setNumber(newNumber);\n    setUrl(`https://api.pokemontcg.io/v1/cards?pageSize=${newNumber}`);\n  };\n\n  const handlerInput = (e) => {\n    const value = e.target.value;\n    let newCards = cardsArray.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n    setCardsArrayFilter(newCards);\n    setInputValue(value);\n  };\n\n  const cards = cardsArray.map(\n    ({ id, name, imageUrl, supertype, subtype, rarity, number }) => (\n      <div key={id} className=\"card\">\n        <p className=\"card__title\">\n          <span className=\"card__name\">{name}</span>\n          Nr: {number}\n        </p>\n        <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Superttype: </span>\n          {supertype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Subtype: </span> {subtype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Rarity: </span> {rarity}\n        </p>\n      </div>\n    )\n  );\n  const cardsFilter = cardsArrayFilter.map(\n    ({ id, name, imageUrl, supertype, subtype, rarity, number }) => (\n      <div key={id} className=\"card\">\n        <p className=\"card__title\">\n          <span className=\"card__name\">{name}</span>\n          Nr: {number}\n        </p>\n        <img src={imageUrl} alt=\"pokemon\" className=\"card__img\" />\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Superttype: </span>\n          {supertype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Subtype: </span> {subtype}\n        </p>\n        <p className=\"card__type-name\">\n          <span className=\"card__type\">Rarity: </span> {rarity}\n        </p>\n      </div>\n    )\n  );\n  return (\n    <div className=\"catalog\">\n      <div className=\"catalog__header header\">\n        <h1 className=\"header__title\">\n          Pokemon <span className=\"header__title--brown\">catalog</span>\n        </h1>\n        <div className=\"header__container\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            className=\"header__input\"\n            onChange={handlerInput}\n            placeholder=\"Search\"\n          />\n          <div\n            className={\n              inputValue ? \"header__line header__line--red\" : \"header__line\"\n            }\n          ></div>\n          <div className=\"header__input-subtitle\">{inputValue && \"Search\"}</div>\n        </div>\n      </div>\n\n      <div className=\"catalog__cards\">{inputValue ? cardsFilter : cards}</div>\n      {isLoading && <p className=\"catalog__loader\">\"loading\"</p>}\n      {!inputValue && !isLoading ? (\n        <button className=\"catalog__button\" onClick={handlerButton}>\n          Load {numberFetchingCards} more cards\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}